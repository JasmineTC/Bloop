MMUL0 -> (2*v1^2*λ11 + 2*v1CP^2*λ11 + v2^2*λ12 + v2CP^2*λ12 + v3^2*λ31 - 2*μ1sq)/2
MMUL1 -> v1*v3*λ3Im + v1CP*v3*(-1/2*λ31p + λ3Re)
MMUL2 -> (v2^2*λ23 + v2CP^2*λ23 + v1^2*λ31 + v1CP^2*λ31 + 2*v3^2*λ33 - 2*μ3sq)/2
MMUL3 -> (v3*(-2*v1CP*λ3Im + v1*(λ31p + 2*λ3Re)))/2
MMUL4 -> (2*v1^2*λ11 + 2*v1CP^2*λ11 + v2^2*λ12 + v2CP^2*λ12 + v3^2*λ31 - 2*μ1sq)/2
MMUL5 -> (v3*(-2*v1CP*λ3Im + v1*(λ31p + 2*λ3Re)))/2
MMUL6 -> (v3*(-2*v1*λ3Im + v1CP*(λ31p - 2*λ3Re)))/2
MMUL7 -> (v2^2*λ23 + v2CP^2*λ23 + v1^2*λ31 + v1CP^2*λ31 + 2*v3^2*λ33 - 2*μ3sq)/2
MMUL8 -> v1CP*v2*λ1Im - v1*v2CP*λ1Im + v1*v2*(λ12p/2 + λ1Re) + v1CP*v2CP*(λ12p/2 + λ1Re) - μ12sqRe
MMUL9 -> -1/2*(v3*(2*v2*λ2Im + v2CP*(λ23p - 2*λ2Re)))
MMUL10 -> v1*v2*λ1Im + v1CP*v2CP*λ1Im + (v1CP*v2*(λ12p - 2*λ1Re))/2 + v1*v2CP*(-1/2*λ12p + λ1Re) - μ12sqIm
MMUL11 -> v2CP*v3*λ2Im + (v2*v3*(λ23p + 2*λ2Re))/2
MMUL12 -> (v1^2*λ12 + v1CP^2*λ12 + 2*v2^2*λ22 + 2*v2CP^2*λ22 + v3^2*λ23 - 2*μ2sq)/2
MMUL13 -> -(v1*v2*λ1Im) - v1CP*v2CP*λ1Im + (v1*v2CP*(λ12p - 2*λ1Re))/2 + v1CP*v2*(-1/2*λ12p + λ1Re) + μ12sqIm
MMUL14 -> v2CP*v3*λ2Im + (v2*v3*(λ23p + 2*λ2Re))/2
MMUL15 -> v1CP*v2*λ1Im - v1*v2CP*λ1Im + v1*v2*(λ12p/2 + λ1Re) + v1CP*v2CP*(λ12p/2 + λ1Re) - μ12sqRe
MMUL16 -> v2*v3*λ2Im + (v2CP*v3*(λ23p - 2*λ2Re))/2
MMUL17 -> (v1^2*λ12 + v1CP^2*λ12 + 2*v2^2*λ22 + 2*v2CP^2*λ22 + v3^2*λ23 - 2*μ2sq)/2